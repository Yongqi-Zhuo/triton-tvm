#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [2, 16], warpsPerCTA = [4, 1], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [2, 2], order = [1, 0]}>
#blocked2 = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#blocked3 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [32, 1], warpsPerCTA = [4, 1], order = [0, 1]}>
#blocked4 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [32, 1], warpsPerCTA = [4, 1], order = [1, 0]}>
#blocked5 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 4], order = [0, 1]}>
#blocked6 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [16, 2], warpsPerCTA = [1, 4], order = [0, 1]}>
#blocked7 = #triton_gpu.blocked<{sizePerThread = [4, 4], threadsPerWarp = [2, 16], warpsPerCTA = [4, 1], order = [1, 0]}>
#loc = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":37:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:86", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @matmul_kernel(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":37:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":37:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":37:0), %arg3: i32 loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":37:0), %arg4: i32 loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":37:0), %arg5: i32 loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":37:0), %arg6: i32 loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":37:0), %arg7: i32 loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":37:0), %arg8: i32 loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":37:0)) attributes {noinline = false} {
    %c15_i32 = arith.constant 15 : i32 loc(#loc1)
    %c63_i32 = arith.constant 63 : i32 loc(#loc1)
    %c31_i32 = arith.constant 31 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<16> : tensor<32x16xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<32x64xf32, #blocked1> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<16x64xf32, #blocked1> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<32x16xf32, #blocked> loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.addi %arg3, %c31_i32 : i32 loc(#loc59)
    %2 = arith.divsi %1, %c32_i32 : i32 loc(#loc60)
    %3 = arith.addi %arg4, %c63_i32 : i32 loc(#loc61)
    %4 = arith.divsi %3, %c64_i32 : i32 loc(#loc62)
    %5 = arith.muli %4, %c8_i32 : i32 loc(#loc7)
    %6 = arith.divsi %0, %5 : i32 loc(#loc8)
    %7 = arith.muli %6, %c8_i32 : i32 loc(#loc9)
    %8 = arith.subi %2, %7 : i32 loc(#loc10)
    %9 = arith.minsi %8, %c8_i32 : i32 loc(#loc11)
    %10 = arith.remsi %0, %9 : i32 loc(#loc12)
    %11 = arith.addi %7, %10 : i32 loc(#loc13)
    %12 = arith.remsi %0, %5 : i32 loc(#loc14)
    %13 = arith.divsi %12, %9 : i32 loc(#loc15)
    %14 = arith.muli %11, %c32_i32 : i32 loc(#loc16)
    %15 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #blocked2> loc(#loc17)
    %16 = tt.splat %14 : i32 -> tensor<32xi32, #blocked2> loc(#loc18)
    %17 = arith.addi %16, %15 : tensor<32xi32, #blocked2> loc(#loc18)
    %18 = tt.splat %arg3 : i32 -> tensor<32xi32, #blocked2> loc(#loc19)
    %19 = arith.remsi %17, %18 : tensor<32xi32, #blocked2> loc(#loc19)
    %20 = arith.muli %13, %c64_i32 : i32 loc(#loc20)
    %21 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #blocked2> loc(#loc21)
    %22 = tt.splat %20 : i32 -> tensor<64xi32, #blocked2> loc(#loc22)
    %23 = arith.addi %22, %21 : tensor<64xi32, #blocked2> loc(#loc22)
    %24 = tt.splat %arg4 : i32 -> tensor<64xi32, #blocked2> loc(#loc23)
    %25 = arith.remsi %23, %24 : tensor<64xi32, #blocked2> loc(#loc23)
    %26 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #blocked2> loc(#loc24)
    %27 = triton_gpu.convert_layout %19 : tensor<32xi32, #blocked2> -> tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked3}>> loc(#loc25)
    %28 = tt.expand_dims %27 {axis = 1 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked3}>> -> tensor<32x1xi32, #blocked3> loc(#loc25)
    %29 = triton_gpu.convert_layout %28 : tensor<32x1xi32, #blocked3> -> tensor<32x1xi32, #blocked4> loc(#loc26)
    %30 = tt.splat %arg6 : i32 -> tensor<32x1xi32, #blocked4> loc(#loc26)
    %31 = arith.muli %29, %30 : tensor<32x1xi32, #blocked4> loc(#loc26)
    %32 = triton_gpu.convert_layout %26 : tensor<16xi32, #blocked2> -> tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked5}>> loc(#loc27)
    %33 = tt.expand_dims %32 {axis = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked5}>> -> tensor<1x16xi32, #blocked5> loc(#loc27)
    %34 = triton_gpu.convert_layout %33 : tensor<1x16xi32, #blocked5> -> tensor<1x16xi32, #blocked> loc(#loc28)
    %35 = tt.broadcast %31 : tensor<32x1xi32, #blocked4> -> tensor<32x16xi32, #blocked4> loc(#loc28)
    %36 = triton_gpu.convert_layout %35 : tensor<32x16xi32, #blocked4> -> tensor<32x16xi32, #blocked> loc(#loc28)
    %37 = tt.broadcast %34 : tensor<1x16xi32, #blocked> -> tensor<32x16xi32, #blocked> loc(#loc28)
    %38 = arith.addi %36, %37 : tensor<32x16xi32, #blocked> loc(#loc28)
    %39 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<32x16x!tt.ptr<f32>, #blocked> loc(#loc29)
    %40 = tt.addptr %39, %38 : tensor<32x16x!tt.ptr<f32>, #blocked>, tensor<32x16xi32, #blocked> loc(#loc29)
    %41 = triton_gpu.convert_layout %26 : tensor<16xi32, #blocked2> -> tensor<16xi32, #triton_gpu.slice<{dim = 1, parent = #blocked3}>> loc(#loc30)
    %42 = tt.expand_dims %41 {axis = 1 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 1, parent = #blocked3}>> -> tensor<16x1xi32, #blocked3> loc(#loc30)
    %43 = triton_gpu.convert_layout %42 : tensor<16x1xi32, #blocked3> -> tensor<16x1xi32, #blocked4> loc(#loc31)
    %44 = tt.splat %arg7 : i32 -> tensor<16x1xi32, #blocked4> loc(#loc31)
    %45 = arith.muli %43, %44 : tensor<16x1xi32, #blocked4> loc(#loc31)
    %46 = triton_gpu.convert_layout %25 : tensor<64xi32, #blocked2> -> tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked5}>> loc(#loc32)
    %47 = tt.expand_dims %46 {axis = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked5}>> -> tensor<1x64xi32, #blocked5> loc(#loc32)
    %48 = triton_gpu.convert_layout %47 : tensor<1x64xi32, #blocked5> -> tensor<1x64xi32, #blocked1> loc(#loc33)
    %49 = tt.broadcast %45 : tensor<16x1xi32, #blocked4> -> tensor<16x64xi32, #blocked4> loc(#loc33)
    %50 = triton_gpu.convert_layout %49 : tensor<16x64xi32, #blocked4> -> tensor<16x64xi32, #blocked1> loc(#loc33)
    %51 = tt.broadcast %48 : tensor<1x64xi32, #blocked1> -> tensor<16x64xi32, #blocked1> loc(#loc33)
    %52 = arith.addi %50, %51 : tensor<16x64xi32, #blocked1> loc(#loc33)
    %53 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<16x64x!tt.ptr<f32>, #blocked1> loc(#loc34)
    %54 = tt.addptr %53, %52 : tensor<16x64x!tt.ptr<f32>, #blocked1>, tensor<16x64xi32, #blocked1> loc(#loc34)
    %55 = arith.addi %arg5, %c15_i32 : i32 loc(#loc63)
    %56 = arith.divsi %55, %c16_i32 : i32 loc(#loc64)
    %57 = arith.muli %arg7, %c16_i32 : i32 loc(#loc36)
    %58 = tt.splat %57 : i32 -> tensor<16x64xi32, #blocked1> loc(#loc37)
    %59:3 = scf.for %arg9 = %c0_i32 to %56 step %c1_i32 iter_args(%arg10 = %cst_0, %arg11 = %40, %arg12 = %54) -> (tensor<32x64xf32, #blocked1>, tensor<32x16x!tt.ptr<f32>, #blocked>, tensor<16x64x!tt.ptr<f32>, #blocked1>)  : i32 {
      %85 = arith.muli %arg9, %c16_i32 : i32 loc(#loc39)
      %86 = arith.subi %arg5, %85 : i32 loc(#loc40)
      %87 = tt.splat %86 : i32 -> tensor<1x16xi32, #blocked> loc(#loc41)
      %88 = arith.cmpi slt, %34, %87 : tensor<1x16xi32, #blocked> loc(#loc41)
      %89 = tt.broadcast %88 : tensor<1x16xi1, #blocked> -> tensor<32x16xi1, #blocked> loc(#loc42)
      %90 = triton_gpu.convert_layout %arg11 : tensor<32x16x!tt.ptr<f32>, #blocked> -> tensor<32x16x!tt.ptr<f32>, #blocked> loc(#loc42)
      %91 = triton_gpu.convert_layout %89 : tensor<32x16xi1, #blocked> -> tensor<32x16xi1, #blocked> loc(#loc42)
      %92 = triton_gpu.convert_layout %cst_2 : tensor<32x16xf32, #blocked> -> tensor<32x16xf32, #blocked> loc(#loc42)
      %93 = tt.load %90, %91, %92 : tensor<32x16x!tt.ptr<f32>, #blocked> loc(#loc42)
      %94 = tt.splat %86 : i32 -> tensor<16x1xi32, #blocked4> loc(#loc43)
      %95 = arith.cmpi slt, %43, %94 : tensor<16x1xi32, #blocked4> loc(#loc43)
      %96 = tt.broadcast %95 : tensor<16x1xi1, #blocked4> -> tensor<16x64xi1, #blocked4> loc(#loc44)
      %97 = triton_gpu.convert_layout %96 : tensor<16x64xi1, #blocked4> -> tensor<16x64xi1, #blocked1> loc(#loc44)
      %98 = triton_gpu.convert_layout %arg12 : tensor<16x64x!tt.ptr<f32>, #blocked1> -> tensor<16x64x!tt.ptr<f32>, #blocked6> loc(#loc44)
      %99 = triton_gpu.convert_layout %97 : tensor<16x64xi1, #blocked1> -> tensor<16x64xi1, #blocked6> loc(#loc44)
      %100 = triton_gpu.convert_layout %cst_1 : tensor<16x64xf32, #blocked1> -> tensor<16x64xf32, #blocked6> loc(#loc44)
      %101 = tt.load %98, %99, %100 : tensor<16x64x!tt.ptr<f32>, #blocked6> loc(#loc44)
      %102 = triton_gpu.convert_layout %101 : tensor<16x64xf32, #blocked6> -> tensor<16x64xf32, #blocked1> loc(#loc44)
      %103 = triton_gpu.convert_layout %93 : tensor<32x16xf32, #blocked> -> tensor<32x16xf32, #triton_gpu.dot_op<{opIdx = 0, parent = #blocked7}>> loc(#loc42)
      %104 = triton_gpu.convert_layout %102 : tensor<16x64xf32, #blocked1> -> tensor<16x64xf32, #triton_gpu.dot_op<{opIdx = 1, parent = #blocked7}>> loc(#loc44)
      %105 = triton_gpu.convert_layout %arg10 : tensor<32x64xf32, #blocked1> -> tensor<32x64xf32, #blocked7> loc(#loc45)
      %106 = tt.dot %103, %104, %105, inputPrecision = tf32 : tensor<32x16xf32, #triton_gpu.dot_op<{opIdx = 0, parent = #blocked7}>> * tensor<16x64xf32, #triton_gpu.dot_op<{opIdx = 1, parent = #blocked7}>> -> tensor<32x64xf32, #blocked7> loc(#loc46)
      %107 = triton_gpu.convert_layout %106 : tensor<32x64xf32, #blocked7> -> tensor<32x64xf32, #blocked1> loc(#loc47)
      %108 = tt.addptr %arg11, %cst : tensor<32x16x!tt.ptr<f32>, #blocked>, tensor<32x16xi32, #blocked> loc(#loc48)
      %109 = tt.addptr %arg12, %58 : tensor<16x64x!tt.ptr<f32>, #blocked1>, tensor<16x64xi32, #blocked1> loc(#loc37)
      scf.yield %107, %108, %109 : tensor<32x64xf32, #blocked1>, tensor<32x16x!tt.ptr<f32>, #blocked>, tensor<16x64x!tt.ptr<f32>, #blocked1> loc(#loc47)
    } loc(#loc38)
    %60 = triton_gpu.convert_layout %17 : tensor<32xi32, #blocked2> -> tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked3}>> loc(#loc49)
    %61 = tt.expand_dims %60 {axis = 1 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked3}>> -> tensor<32x1xi32, #blocked3> loc(#loc49)
    %62 = triton_gpu.convert_layout %61 : tensor<32x1xi32, #blocked3> -> tensor<32x1xi32, #blocked4> loc(#loc50)
    %63 = tt.splat %arg8 : i32 -> tensor<32x1xi32, #blocked4> loc(#loc50)
    %64 = arith.muli %63, %62 : tensor<32x1xi32, #blocked4> loc(#loc50)
    %65 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>, #blocked4> loc(#loc51)
    %66 = tt.addptr %65, %64 : tensor<32x1x!tt.ptr<f32>, #blocked4>, tensor<32x1xi32, #blocked4> loc(#loc51)
    %67 = triton_gpu.convert_layout %23 : tensor<64xi32, #blocked2> -> tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked5}>> loc(#loc52)
    %68 = tt.expand_dims %67 {axis = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked5}>> -> tensor<1x64xi32, #blocked5> loc(#loc52)
    %69 = triton_gpu.convert_layout %68 : tensor<1x64xi32, #blocked5> -> tensor<1x64xi32, #blocked1> loc(#loc53)
    %70 = tt.broadcast %66 : tensor<32x1x!tt.ptr<f32>, #blocked4> -> tensor<32x64x!tt.ptr<f32>, #blocked4> loc(#loc53)
    %71 = triton_gpu.convert_layout %70 : tensor<32x64x!tt.ptr<f32>, #blocked4> -> tensor<32x64x!tt.ptr<f32>, #blocked1> loc(#loc53)
    %72 = tt.broadcast %69 : tensor<1x64xi32, #blocked1> -> tensor<32x64xi32, #blocked1> loc(#loc53)
    %73 = tt.addptr %71, %72 : tensor<32x64x!tt.ptr<f32>, #blocked1>, tensor<32x64xi32, #blocked1> loc(#loc53)
    %74 = tt.splat %arg3 : i32 -> tensor<32x1xi32, #blocked4> loc(#loc54)
    %75 = arith.cmpi slt, %62, %74 : tensor<32x1xi32, #blocked4> loc(#loc54)
    %76 = tt.splat %arg4 : i32 -> tensor<1x64xi32, #blocked1> loc(#loc55)
    %77 = arith.cmpi slt, %69, %76 : tensor<1x64xi32, #blocked1> loc(#loc55)
    %78 = tt.broadcast %75 : tensor<32x1xi1, #blocked4> -> tensor<32x64xi1, #blocked4> loc(#loc56)
    %79 = triton_gpu.convert_layout %78 : tensor<32x64xi1, #blocked4> -> tensor<32x64xi1, #blocked1> loc(#loc56)
    %80 = tt.broadcast %77 : tensor<1x64xi1, #blocked1> -> tensor<32x64xi1, #blocked1> loc(#loc56)
    %81 = arith.andi %79, %80 : tensor<32x64xi1, #blocked1> loc(#loc56)
    %82 = triton_gpu.convert_layout %73 : tensor<32x64x!tt.ptr<f32>, #blocked1> -> tensor<32x64x!tt.ptr<f32>, #blocked1> loc(#loc57)
    %83 = triton_gpu.convert_layout %59#0 : tensor<32x64xf32, #blocked1> -> tensor<32x64xf32, #blocked1> loc(#loc57)
    %84 = triton_gpu.convert_layout %81 : tensor<32x64xi1, #blocked1> -> tensor<32x64xi1, #blocked1> loc(#loc57)
    tt.store %82, %83, %84 : tensor<32x64x!tt.ptr<f32>, #blocked1> loc(#loc57)
    tt.return loc(#loc58)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":60:24)
#loc3 = loc("/home/yongqi/.local/lib/python3.12/site-packages/triton/language/standard.py":44:22)
#loc4 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":61:27)
#loc5 = loc("/home/yongqi/.local/lib/python3.12/site-packages/triton/language/standard.py":44:28)
#loc6 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":62:27)
#loc7 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":63:38)
#loc8 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":64:22)
#loc9 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":65:29)
#loc10 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":66:35)
#loc11 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":66:48)
#loc12 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":67:33)
#loc13 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":67:27)
#loc14 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":68:19)
#loc15 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":68:40)
#loc16 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":77:23)
#loc17 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":77:51)
#loc18 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":77:38)
#loc19 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":77:68)
#loc20 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":78:23)
#loc21 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":78:51)
#loc22 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":78:38)
#loc23 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":78:68)
#loc24 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":79:26)
#loc25 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":80:30)
#loc26 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":80:41)
#loc27 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":80:60)
#loc28 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":80:53)
#loc29 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":80:22)
#loc30 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":81:29)
#loc31 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":81:40)
#loc32 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":81:60)
#loc33 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":81:52)
#loc34 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":81:22)
#loc35 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":89:33)
#loc36 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":98:33)
#loc37 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":98:18)
#loc38 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":89:22)
#loc39 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":92:59)
#loc40 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":92:55)
#loc41 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":92:51)
#loc42 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":92:20)
#loc43 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":93:51)
#loc44 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":93:20)
#loc45 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":88:27)
#loc46 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":95:33)
#loc47 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":98:8)
#loc48 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":97:18)
#loc49 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":109:41)
#loc50 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":109:33)
#loc51 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":109:21)
#loc52 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":109:72)
#loc53 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":109:52)
#loc54 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":110:33)
#loc55 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":110:58)
#loc56 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":110:39)
#loc57 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":111:21)
#loc58 = loc("/home/yongqi/external/triton_shared/python/examples/test_matmul.py":111:4)
#loc59 = loc(callsite(#loc3 at #loc4))
#loc60 = loc(callsite(#loc5 at #loc4))
#loc61 = loc(callsite(#loc3 at #loc6))
#loc62 = loc(callsite(#loc5 at #loc6))
#loc63 = loc(callsite(#loc3 at #loc35))
#loc64 = loc(callsite(#loc5 at #loc35))
